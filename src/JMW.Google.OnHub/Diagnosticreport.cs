#pragma warning disable CS8981 // The type name only contains lower-cased ascii characters. Such names may become reserved for the language.
// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: diagnosticreport.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Diagnosticreport {

  /// <summary>Holder for reflection information generated from diagnosticreport.proto</summary>
  public static partial class DiagnosticreportReflection {

    #region Descriptor
    /// <summary>File descriptor for diagnosticreport.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DiagnosticreportReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZkaWFnbm9zdGljcmVwb3J0LnByb3RvEhBkaWFnbm9zdGljcmVwb3J0IiUK",
            "BEZpbGUSDAoEcGF0aBgBIAEoCRIPCgdjb250ZW50GAIgASgMIioKCkZpbGVM",
            "ZW5ndGgSDAoEcGF0aBgBIAEoCRIOCgZsZW5ndGgYAiABKAUiRAoNQ29tbWFu",
            "ZE91dHB1dBIPCgdjb21tYW5kGAEgASgJEg4KBm91dHB1dBgCIAEoCRISCgpz",
            "dGF0dXNDb2RlGAMgASgFIjEKC1Vua25vd25QYWlyEhAKCHVua25vd24xGAEg",
            "ASgJEhAKCHVua25vd24yGAIgASgJIsUDChBEaWFnbm9zdGljUmVwb3J0Eg8K",
            "B3ZlcnNpb24YASABKAkSJQoFZmlsZXMYAiADKAsyFi5kaWFnbm9zdGljcmVw",
            "b3J0LkZpbGUSFAoMc3Rvcm1WZXJzaW9uGAMgASgJEhgKEHdoaXJsd2luZFZl",
            "cnNpb24YBCABKAkSFQoNbmV0d29ya0NvbmZpZxgFIAEoCRIxCgtmaWxlTGVu",
            "Z3RocxgHIAMoCzIcLmRpYWdub3N0aWNyZXBvcnQuRmlsZUxlbmd0aBIPCgd3",
            "YW5JbmZvGAggASgJEjcKDmNvbW1hbmRPdXRwdXRzGAkgAygLMh8uZGlhZ25v",
            "c3RpY3JlcG9ydC5Db21tYW5kT3V0cHV0EhAKCGluZm9KU09OGAogASgJEhAK",
            "CHVua25vd24xGAsgASgFEjMKDHVua25vd25QYWlycxgMIAMoCzIdLmRpYWdu",
            "b3N0aWNyZXBvcnQuVW5rbm93blBhaXISEAoIdW5peFRpbWUYDSABKAUSFQoN",
            "dW5rbm93blN0cmluZxgPIAMoCRIUCgxuZXR3b3JrU3RhdGUYECABKAkSDQoF",
            "c3RhdGUYESABKAkSDgoGY29uZmlnGBIgASgJYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Diagnosticreport.File), global::Diagnosticreport.File.Parser, new[]{ "Path", "Content" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Diagnosticreport.FileLength), global::Diagnosticreport.FileLength.Parser, new[]{ "Path", "Length" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Diagnosticreport.CommandOutput), global::Diagnosticreport.CommandOutput.Parser, new[]{ "Command", "Output", "StatusCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Diagnosticreport.UnknownPair), global::Diagnosticreport.UnknownPair.Parser, new[]{ "Unknown1", "Unknown2" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Diagnosticreport.DiagnosticReport), global::Diagnosticreport.DiagnosticReport.Parser, new[]{ "Version", "Files", "StormVersion", "WhirlwindVersion", "NetworkConfig", "FileLengths", "WanInfo", "CommandOutputs", "InfoJSON", "Unknown1", "UnknownPairs", "UnixTime", "UnknownString", "NetworkState", "State", "Config" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class File : pb::IMessage<File>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<File> _parser = new pb::MessageParser<File>(() => new File());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<File> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Diagnosticreport.DiagnosticreportReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public File() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public File(File other) : this() {
      path_ = other.path_;
      content_ = other.content_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public File Clone() {
      return new File(this);
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 1;
    private string path_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 2;
    private pb::ByteString content_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as File);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(File other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path != other.Path) return false;
      if (Content != other.Content) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(File other) {
      if (other == null) {
        return;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 18: {
            Content = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 18: {
            Content = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FileLength : pb::IMessage<FileLength>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FileLength> _parser = new pb::MessageParser<FileLength>(() => new FileLength());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FileLength> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Diagnosticreport.DiagnosticreportReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileLength() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileLength(FileLength other) : this() {
      path_ = other.path_;
      length_ = other.length_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileLength Clone() {
      return new FileLength(this);
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 1;
    private string path_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "length" field.</summary>
    public const int LengthFieldNumber = 2;
    private int length_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FileLength);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FileLength other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path != other.Path) return false;
      if (Length != other.Length) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (Length != 0) hash ^= Length.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (Length != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Length);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (Length != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Length);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Length);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FileLength other) {
      if (other == null) {
        return;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.Length != 0) {
        Length = other.Length;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 16: {
            Length = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 16: {
            Length = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CommandOutput : pb::IMessage<CommandOutput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CommandOutput> _parser = new pb::MessageParser<CommandOutput>(() => new CommandOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Diagnosticreport.DiagnosticreportReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandOutput(CommandOutput other) : this() {
      command_ = other.command_;
      output_ = other.output_;
      statusCode_ = other.statusCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandOutput Clone() {
      return new CommandOutput(this);
    }

    /// <summary>Field number for the "command" field.</summary>
    public const int CommandFieldNumber = 1;
    private string command_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Command {
      get { return command_; }
      set {
        command_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "output" field.</summary>
    public const int OutputFieldNumber = 2;
    private string output_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Output {
      get { return output_; }
      set {
        output_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "statusCode" field.</summary>
    public const int StatusCodeFieldNumber = 3;
    private int statusCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Command != other.Command) return false;
      if (Output != other.Output) return false;
      if (StatusCode != other.StatusCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Command.Length != 0) hash ^= Command.GetHashCode();
      if (Output.Length != 0) hash ^= Output.GetHashCode();
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Command.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Command);
      }
      if (Output.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Output);
      }
      if (StatusCode != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(StatusCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Command.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Command);
      }
      if (Output.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Output);
      }
      if (StatusCode != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(StatusCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Command.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Command);
      }
      if (Output.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Output);
      }
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StatusCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandOutput other) {
      if (other == null) {
        return;
      }
      if (other.Command.Length != 0) {
        Command = other.Command;
      }
      if (other.Output.Length != 0) {
        Output = other.Output;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Command = input.ReadString();
            break;
          }
          case 18: {
            Output = input.ReadString();
            break;
          }
          case 24: {
            StatusCode = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Command = input.ReadString();
            break;
          }
          case 18: {
            Output = input.ReadString();
            break;
          }
          case 24: {
            StatusCode = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UnknownPair : pb::IMessage<UnknownPair>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnknownPair> _parser = new pb::MessageParser<UnknownPair>(() => new UnknownPair());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnknownPair> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Diagnosticreport.DiagnosticreportReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnknownPair() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnknownPair(UnknownPair other) : this() {
      unknown1_ = other.unknown1_;
      unknown2_ = other.unknown2_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnknownPair Clone() {
      return new UnknownPair(this);
    }

    /// <summary>Field number for the "unknown1" field.</summary>
    public const int Unknown1FieldNumber = 1;
    private string unknown1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Unknown1 {
      get { return unknown1_; }
      set {
        unknown1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unknown2" field.</summary>
    public const int Unknown2FieldNumber = 2;
    private string unknown2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Unknown2 {
      get { return unknown2_; }
      set {
        unknown2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnknownPair);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnknownPair other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Unknown1 != other.Unknown1) return false;
      if (Unknown2 != other.Unknown2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Unknown1.Length != 0) hash ^= Unknown1.GetHashCode();
      if (Unknown2.Length != 0) hash ^= Unknown2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Unknown1.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Unknown1);
      }
      if (Unknown2.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Unknown2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Unknown1.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Unknown1);
      }
      if (Unknown2.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Unknown2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Unknown1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Unknown1);
      }
      if (Unknown2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Unknown2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnknownPair other) {
      if (other == null) {
        return;
      }
      if (other.Unknown1.Length != 0) {
        Unknown1 = other.Unknown1;
      }
      if (other.Unknown2.Length != 0) {
        Unknown2 = other.Unknown2;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Unknown1 = input.ReadString();
            break;
          }
          case 18: {
            Unknown2 = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Unknown1 = input.ReadString();
            break;
          }
          case 18: {
            Unknown2 = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DiagnosticReport : pb::IMessage<DiagnosticReport>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DiagnosticReport> _parser = new pb::MessageParser<DiagnosticReport>(() => new DiagnosticReport());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DiagnosticReport> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Diagnosticreport.DiagnosticreportReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiagnosticReport() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiagnosticReport(DiagnosticReport other) : this() {
      version_ = other.version_;
      files_ = other.files_.Clone();
      stormVersion_ = other.stormVersion_;
      whirlwindVersion_ = other.whirlwindVersion_;
      networkConfig_ = other.networkConfig_;
      fileLengths_ = other.fileLengths_.Clone();
      wanInfo_ = other.wanInfo_;
      commandOutputs_ = other.commandOutputs_.Clone();
      infoJSON_ = other.infoJSON_;
      unknown1_ = other.unknown1_;
      unknownPairs_ = other.unknownPairs_.Clone();
      unixTime_ = other.unixTime_;
      unknownString_ = other.unknownString_.Clone();
      networkState_ = other.networkState_;
      state_ = other.state_;
      config_ = other.config_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiagnosticReport Clone() {
      return new DiagnosticReport(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private string version_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "files" field.</summary>
    public const int FilesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Diagnosticreport.File> _repeated_files_codec
        = pb::FieldCodec.ForMessage(18, global::Diagnosticreport.File.Parser);
    private readonly pbc::RepeatedField<global::Diagnosticreport.File> files_ = new pbc::RepeatedField<global::Diagnosticreport.File>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Diagnosticreport.File> Files {
      get { return files_; }
    }

    /// <summary>Field number for the "stormVersion" field.</summary>
    public const int StormVersionFieldNumber = 3;
    private string stormVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StormVersion {
      get { return stormVersion_; }
      set {
        stormVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "whirlwindVersion" field.</summary>
    public const int WhirlwindVersionFieldNumber = 4;
    private string whirlwindVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WhirlwindVersion {
      get { return whirlwindVersion_; }
      set {
        whirlwindVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "networkConfig" field.</summary>
    public const int NetworkConfigFieldNumber = 5;
    private string networkConfig_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkConfig {
      get { return networkConfig_; }
      set {
        networkConfig_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fileLengths" field.</summary>
    public const int FileLengthsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Diagnosticreport.FileLength> _repeated_fileLengths_codec
        = pb::FieldCodec.ForMessage(58, global::Diagnosticreport.FileLength.Parser);
    private readonly pbc::RepeatedField<global::Diagnosticreport.FileLength> fileLengths_ = new pbc::RepeatedField<global::Diagnosticreport.FileLength>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Diagnosticreport.FileLength> FileLengths {
      get { return fileLengths_; }
    }

    /// <summary>Field number for the "wanInfo" field.</summary>
    public const int WanInfoFieldNumber = 8;
    private string wanInfo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WanInfo {
      get { return wanInfo_; }
      set {
        wanInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "commandOutputs" field.</summary>
    public const int CommandOutputsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Diagnosticreport.CommandOutput> _repeated_commandOutputs_codec
        = pb::FieldCodec.ForMessage(74, global::Diagnosticreport.CommandOutput.Parser);
    private readonly pbc::RepeatedField<global::Diagnosticreport.CommandOutput> commandOutputs_ = new pbc::RepeatedField<global::Diagnosticreport.CommandOutput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Diagnosticreport.CommandOutput> CommandOutputs {
      get { return commandOutputs_; }
    }

    /// <summary>Field number for the "infoJSON" field.</summary>
    public const int InfoJSONFieldNumber = 10;
    private string infoJSON_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InfoJSON {
      get { return infoJSON_; }
      set {
        infoJSON_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unknown1" field.</summary>
    public const int Unknown1FieldNumber = 11;
    private int unknown1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Unknown1 {
      get { return unknown1_; }
      set {
        unknown1_ = value;
      }
    }

    /// <summary>Field number for the "unknownPairs" field.</summary>
    public const int UnknownPairsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Diagnosticreport.UnknownPair> _repeated_unknownPairs_codec
        = pb::FieldCodec.ForMessage(98, global::Diagnosticreport.UnknownPair.Parser);
    private readonly pbc::RepeatedField<global::Diagnosticreport.UnknownPair> unknownPairs_ = new pbc::RepeatedField<global::Diagnosticreport.UnknownPair>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Diagnosticreport.UnknownPair> UnknownPairs {
      get { return unknownPairs_; }
    }

    /// <summary>Field number for the "unixTime" field.</summary>
    public const int UnixTimeFieldNumber = 13;
    private int unixTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnixTime {
      get { return unixTime_; }
      set {
        unixTime_ = value;
      }
    }

    /// <summary>Field number for the "unknownString" field.</summary>
    public const int UnknownStringFieldNumber = 15;
    private static readonly pb::FieldCodec<string> _repeated_unknownString_codec
        = pb::FieldCodec.ForString(122);
    private readonly pbc::RepeatedField<string> unknownString_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> UnknownString {
      get { return unknownString_; }
    }

    /// <summary>Field number for the "networkState" field.</summary>
    public const int NetworkStateFieldNumber = 16;
    private string networkState_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkState {
      get { return networkState_; }
      set {
        networkState_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 17;
    private string state_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string State {
      get { return state_; }
      set {
        state_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 18;
    private string config_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Config {
      get { return config_; }
      set {
        config_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DiagnosticReport);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DiagnosticReport other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if(!files_.Equals(other.files_)) return false;
      if (StormVersion != other.StormVersion) return false;
      if (WhirlwindVersion != other.WhirlwindVersion) return false;
      if (NetworkConfig != other.NetworkConfig) return false;
      if(!fileLengths_.Equals(other.fileLengths_)) return false;
      if (WanInfo != other.WanInfo) return false;
      if(!commandOutputs_.Equals(other.commandOutputs_)) return false;
      if (InfoJSON != other.InfoJSON) return false;
      if (Unknown1 != other.Unknown1) return false;
      if(!unknownPairs_.Equals(other.unknownPairs_)) return false;
      if (UnixTime != other.UnixTime) return false;
      if(!unknownString_.Equals(other.unknownString_)) return false;
      if (NetworkState != other.NetworkState) return false;
      if (State != other.State) return false;
      if (Config != other.Config) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      hash ^= files_.GetHashCode();
      if (StormVersion.Length != 0) hash ^= StormVersion.GetHashCode();
      if (WhirlwindVersion.Length != 0) hash ^= WhirlwindVersion.GetHashCode();
      if (NetworkConfig.Length != 0) hash ^= NetworkConfig.GetHashCode();
      hash ^= fileLengths_.GetHashCode();
      if (WanInfo.Length != 0) hash ^= WanInfo.GetHashCode();
      hash ^= commandOutputs_.GetHashCode();
      if (InfoJSON.Length != 0) hash ^= InfoJSON.GetHashCode();
      if (Unknown1 != 0) hash ^= Unknown1.GetHashCode();
      hash ^= unknownPairs_.GetHashCode();
      if (UnixTime != 0) hash ^= UnixTime.GetHashCode();
      hash ^= unknownString_.GetHashCode();
      if (NetworkState.Length != 0) hash ^= NetworkState.GetHashCode();
      if (State.Length != 0) hash ^= State.GetHashCode();
      if (Config.Length != 0) hash ^= Config.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Version.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Version);
      }
      files_.WriteTo(output, _repeated_files_codec);
      if (StormVersion.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(StormVersion);
      }
      if (WhirlwindVersion.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(WhirlwindVersion);
      }
      if (NetworkConfig.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NetworkConfig);
      }
      fileLengths_.WriteTo(output, _repeated_fileLengths_codec);
      if (WanInfo.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(WanInfo);
      }
      commandOutputs_.WriteTo(output, _repeated_commandOutputs_codec);
      if (InfoJSON.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(InfoJSON);
      }
      if (Unknown1 != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Unknown1);
      }
      unknownPairs_.WriteTo(output, _repeated_unknownPairs_codec);
      if (UnixTime != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(UnixTime);
      }
      unknownString_.WriteTo(output, _repeated_unknownString_codec);
      if (NetworkState.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(NetworkState);
      }
      if (State.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(State);
      }
      if (Config.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Version.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Version);
      }
      files_.WriteTo(ref output, _repeated_files_codec);
      if (StormVersion.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(StormVersion);
      }
      if (WhirlwindVersion.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(WhirlwindVersion);
      }
      if (NetworkConfig.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NetworkConfig);
      }
      fileLengths_.WriteTo(ref output, _repeated_fileLengths_codec);
      if (WanInfo.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(WanInfo);
      }
      commandOutputs_.WriteTo(ref output, _repeated_commandOutputs_codec);
      if (InfoJSON.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(InfoJSON);
      }
      if (Unknown1 != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Unknown1);
      }
      unknownPairs_.WriteTo(ref output, _repeated_unknownPairs_codec);
      if (UnixTime != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(UnixTime);
      }
      unknownString_.WriteTo(ref output, _repeated_unknownString_codec);
      if (NetworkState.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(NetworkState);
      }
      if (State.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(State);
      }
      if (Config.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      size += files_.CalculateSize(_repeated_files_codec);
      if (StormVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StormVersion);
      }
      if (WhirlwindVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WhirlwindVersion);
      }
      if (NetworkConfig.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkConfig);
      }
      size += fileLengths_.CalculateSize(_repeated_fileLengths_codec);
      if (WanInfo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WanInfo);
      }
      size += commandOutputs_.CalculateSize(_repeated_commandOutputs_codec);
      if (InfoJSON.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InfoJSON);
      }
      if (Unknown1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Unknown1);
      }
      size += unknownPairs_.CalculateSize(_repeated_unknownPairs_codec);
      if (UnixTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnixTime);
      }
      size += unknownString_.CalculateSize(_repeated_unknownString_codec);
      if (NetworkState.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(NetworkState);
      }
      if (State.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(State);
      }
      if (Config.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Config);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DiagnosticReport other) {
      if (other == null) {
        return;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      files_.Add(other.files_);
      if (other.StormVersion.Length != 0) {
        StormVersion = other.StormVersion;
      }
      if (other.WhirlwindVersion.Length != 0) {
        WhirlwindVersion = other.WhirlwindVersion;
      }
      if (other.NetworkConfig.Length != 0) {
        NetworkConfig = other.NetworkConfig;
      }
      fileLengths_.Add(other.fileLengths_);
      if (other.WanInfo.Length != 0) {
        WanInfo = other.WanInfo;
      }
      commandOutputs_.Add(other.commandOutputs_);
      if (other.InfoJSON.Length != 0) {
        InfoJSON = other.InfoJSON;
      }
      if (other.Unknown1 != 0) {
        Unknown1 = other.Unknown1;
      }
      unknownPairs_.Add(other.unknownPairs_);
      if (other.UnixTime != 0) {
        UnixTime = other.UnixTime;
      }
      unknownString_.Add(other.unknownString_);
      if (other.NetworkState.Length != 0) {
        NetworkState = other.NetworkState;
      }
      if (other.State.Length != 0) {
        State = other.State;
      }
      if (other.Config.Length != 0) {
        Config = other.Config;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Version = input.ReadString();
            break;
          }
          case 18: {
            files_.AddEntriesFrom(input, _repeated_files_codec);
            break;
          }
          case 26: {
            StormVersion = input.ReadString();
            break;
          }
          case 34: {
            WhirlwindVersion = input.ReadString();
            break;
          }
          case 42: {
            NetworkConfig = input.ReadString();
            break;
          }
          case 58: {
            fileLengths_.AddEntriesFrom(input, _repeated_fileLengths_codec);
            break;
          }
          case 66: {
            WanInfo = input.ReadString();
            break;
          }
          case 74: {
            commandOutputs_.AddEntriesFrom(input, _repeated_commandOutputs_codec);
            break;
          }
          case 82: {
            InfoJSON = input.ReadString();
            break;
          }
          case 88: {
            Unknown1 = input.ReadInt32();
            break;
          }
          case 98: {
            unknownPairs_.AddEntriesFrom(input, _repeated_unknownPairs_codec);
            break;
          }
          case 104: {
            UnixTime = input.ReadInt32();
            break;
          }
          case 122: {
            unknownString_.AddEntriesFrom(input, _repeated_unknownString_codec);
            break;
          }
          case 130: {
            NetworkState = input.ReadString();
            break;
          }
          case 138: {
            State = input.ReadString();
            break;
          }
          case 146: {
            Config = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Version = input.ReadString();
            break;
          }
          case 18: {
            files_.AddEntriesFrom(ref input, _repeated_files_codec);
            break;
          }
          case 26: {
            StormVersion = input.ReadString();
            break;
          }
          case 34: {
            WhirlwindVersion = input.ReadString();
            break;
          }
          case 42: {
            NetworkConfig = input.ReadString();
            break;
          }
          case 58: {
            fileLengths_.AddEntriesFrom(ref input, _repeated_fileLengths_codec);
            break;
          }
          case 66: {
            WanInfo = input.ReadString();
            break;
          }
          case 74: {
            commandOutputs_.AddEntriesFrom(ref input, _repeated_commandOutputs_codec);
            break;
          }
          case 82: {
            InfoJSON = input.ReadString();
            break;
          }
          case 88: {
            Unknown1 = input.ReadInt32();
            break;
          }
          case 98: {
            unknownPairs_.AddEntriesFrom(ref input, _repeated_unknownPairs_codec);
            break;
          }
          case 104: {
            UnixTime = input.ReadInt32();
            break;
          }
          case 122: {
            unknownString_.AddEntriesFrom(ref input, _repeated_unknownString_codec);
            break;
          }
          case 130: {
            NetworkState = input.ReadString();
            break;
          }
          case 138: {
            State = input.ReadString();
            break;
          }
          case 146: {
            Config = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code